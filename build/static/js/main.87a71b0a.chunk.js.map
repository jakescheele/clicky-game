{"version":3,"sources":["components/header.js","components/jumbotron.js","components/card.js","App.js","index.js"],"names":["Header","props","react_default","a","createElement","className","href","score","Jumbotron","Card","_React$createElement","src","id","Object","defineProperty","e","clickHandler","App","state","cards","experiments","shuffle","array","sort","Math","random","_this","find","card","clicked","gameOver","newArray","map","setState","_this2","this","Fragment","header","jumbotron","components_card","key","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"6PAWeA,MATf,SAAgBC,GACZ,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0CACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeC,KAAK,KAAjC,uBACAJ,EAAAC,EAAAC,cAAA,sBAAcH,EAAMM,SCOjBC,MAXf,WACI,OACIN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,UACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,4HCGDI,MARf,SAAcR,GAAO,IAAAS,EACjB,OACIR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAAM,EAAA,CAAKL,UAAU,WAAWM,IAAKV,EAAMU,IAAKC,GAAIX,EAAMW,IAApDC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,YAAkE,gBAAlEG,OAAAC,EAAA,EAAAD,CAAAH,EAAA,UAA0F,SAACK,GAAD,OAAKd,EAAMe,aAAaf,EAAMW,GAAIG,KAA5HL,aCsEGO,oNAlEbC,MAAQ,CACNX,MAAO,EACPY,MAAOC,KAGTC,QAAU,SAACC,GAET,OADAA,EAAMC,KAAK,kBAAMC,KAAKC,SAAW,KAC1BH,KAGTN,aAAe,SAACJ,GAId,GADkBc,EAAKR,MAAMC,MAAMQ,KAAK,SAAAC,GAAI,OAAKA,EAAKhB,KAAOA,IAC7CiB,QACdH,EAAKI,eAEF,CACH,IAAIC,EAAWL,EAAKR,MAAMC,MAAMa,IAAI,SAAAJ,GAIlC,OAHIA,EAAKhB,KAAOA,IACdgB,EAAKC,SAAU,GAEVD,IAETF,EAAKO,SAAS,CACZ1B,MAAOmB,EAAKR,MAAMX,MAAQ,EAC1BY,MAAOO,EAAKL,QAAQU,SAK1BD,SAAW,WAGTJ,EAAKO,SAAS,CACZ1B,MAAO,EACPY,MAAOO,EAAKL,QAAQD,8EAKf,IAAAc,EAAAC,KACP,OACEjC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiC,SAAA,KACElC,EAAAC,EAAAC,cAACiC,EAAD,CACE9B,MAAO4B,KAAKjB,MAAMX,QAEpBL,EAAAC,EAAAC,cAACkC,EAAD,MACApC,EAAAC,EAAAC,cAAA,WACG+B,KAAKjB,MAAMC,MAAMa,IAAI,SAAAJ,GACpB,OACA1B,EAAAC,EAAAC,cAACmC,EAAD,CACEC,IAAKZ,EAAKhB,GACVA,GAAIgB,EAAKhB,GACTD,IAAKiB,EAAKjB,IACVkB,QAASD,EAAKC,QACdb,aAAckB,EAAKlB,0BAzDfyB,IAAMC,YCHxBC,IAASC,OAAO1C,EAAAC,EAAAC,cAACyC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.87a71b0a.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Header(props) {\n    return (\n        <nav className=\"navbar fixed-top navbar-light bg-light\">\n            <a className=\"navbar-brand\" href=\"#\">Experiment Round Up</a>\n            <span>Score: {props.score}</span>\n        </nav>\n    );\n}\n\nexport default Header;","import React from 'react';\n\nfunction Jumbotron() {\n    return (\n        <div className=\"jumbotron jumbotron-fluid\">\n            <div className=\"container text-center\">\n                <h1 className=\"display-4\">Ohana!</h1>\n                <p className=\"lead\">Oh no! Some of Jumba's 626 experiments got loose! Find all the experiments, but don't find the same one twice!</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Jumbotron","import React from 'react';\n\nfunction Card(props) {\n    return (\n        <div className=\"card\">\n            <img className=\"card-img\" src={props.src} id={props.id} className=\"card-img-top\" onClick={(e)=>props.clickHandler(props.id, e)} />\n        </div>\n            )\n        }\n        \nexport default Card","import React from 'react';\nimport Header from \"./components/header\";\nimport Jumbotron from \"./components/jumbotron\";\nimport Card from \"./components/card\";\n// import Characters from \"chacters.json\"\nimport experiments from \"./experiments.json\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  state = {\n    score: 0,\n    cards: experiments\n  }\n\n  shuffle = (array) => {\n    array.sort(() => Math.random() - 0.5);\n    return array\n  }\n\n  clickHandler = (id) => {\n    // console.log(event);\n    // if card has already been clicked, gameOver\n    let cardClicked = this.state.cards.find(card => (card.id === id));\n    if (cardClicked.clicked)\n      this.gameOver()\n    // else change image state to clicked and shuffle and increase score\n    else {\n      let newArray = this.state.cards.map(card => {\n        if (card.id === id) {\n          card.clicked = true\n        }\n        return card\n      })\n      this.setState({\n        score: this.state.score + 1,\n        cards: this.shuffle(newArray)\n      })\n    }\n  }\n\n  gameOver = () => {\n    // make all clicked values false\n    // set score to 0 and shuffle\n    this.setState({\n      score: 0,\n      cards: this.shuffle(experiments)\n    })\n    // alert(\"Game over!\")\n  }\n\n  render() {\n    return (\n      <>\n        <Header \n          score={this.state.score}\n        />\n        <Jumbotron />\n        <div>\n          {this.state.cards.map(card => {\n            return (\n            <Card \n              key={card.id}\n              id={card.id}\n              src={card.src}\n              clicked={card.clicked}\n              clickHandler={this.clickHandler}\n            />\n            )\n          })}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}